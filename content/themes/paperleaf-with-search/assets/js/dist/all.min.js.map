{"version":3,"sources":["plugins.js","main.js"],"names":["$","process","check_lock","index","selectorsLength","selectors","length","$appeared","filter","this","is","trigger","$prior_appeared","$disappeared","not","add_selector","selector","push","check_binded","defaults","interval","force_process","$window","window","expr","element","$element","window_left","scrollLeft","window_top","scrollTop","offset","left","top","height","data","width","fn","extend","appear","options","opts","on_check","setTimeout","scroll","resize","force_appear","module","require","jQuery","fitVids","settings","customSelector","document","getElementById","head","getElementsByTagName","css","div","createElement","innerHTML","appendChild","childNodes","each","$allVideos","find","join","$this","tagName","toLowerCase","parent","attr","isNaN","parseInt","aspectRatio","videoID","Math","floor","random","wrap","removeAttr","Zepto","t","e","n","Index","pipeline","add","trimmer","stopWordFilter","stemmer","call","version","utils","warn","console","asString","toString","EventEmitter","events","prototype","addListener","Array","slice","arguments","pop","TypeError","forEach","hasHandler","removeListener","indexOf","splice","emit","apply","tokenizer","isArray","map","trim","split","seperator","load","registeredFunctions","Error","label","default","registerFunction","Pipeline","_stack","warnIfFunctionNotRegistered","i","after","before","remove","run","r","o","s","reset","toJSON","Vector","_magnitude","list","Node","idx","val","next","insert","magnitude","sqrt","dot","similarity","SortedSet","elements","locationFor","toArray","intersect","a","h","clone","union","_fields","_ref","documentStore","Store","tokenStore","TokenStore","corpusTokens","eventEmitter","tokenizerFn","_idfCache","on","bind","off","fields","ref","field","name","boost","set","u","l","c","f","d","p","tf","has","get","update","idf","Object","hasOwnProperty","count","log","search","reduce","some","expand","max","keys","v","score","documentVector","sort","use","unshift","store","ational","tional","enci","anci","izer","bli","alli","entli","eli","ousli","ization","ation","ator","alism","iveness","fulness","ousness","aliti","iviti","biliti","logi","icate","ative","alize","iciti","ical","ful","ness","RegExp","g","m","y","S","w","k","x","b","E","F","_","z","O","P","T","substr","toUpperCase","test","replace","exec","generateStopWordFilter","root","docs","charAt","getNode","concat","define","amd","exports","lunr","ghostHunter","results","pluginMethods","init","onKeyUp","result_template","info_template","displaySearchInfo","zeroResultsInfo","onComplete","prettyDate","date","Date","monthNames","getDate","getMonth","getFullYear","isInit","target","that","blogData","focus","loadAPI","closest","submit","preventDefault","keyup","ghost","url","api","limit","include","done","searchData","posts","arrayItem","tag_arr","tags","category","parsedData","id","String","title","description","meta_description","markdown","pubDate","created_at","tag","link","prettyPubDate","tempdate","value","searchResult","resultsData","empty","append","format","amount","lunrref","postData","clear","undefined","$document","ready","$postContent","$grid","imagesLoaded","masonry","itemSelector","percentPosition","transitionDuration","event","$all_appeared_elements","addClass","fadeOut"],"mappings":"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","file":"all.min.js","sourcesContent":["/*\n * jQuery appear plugin\n *\n * Copyright (c) 2012 Andrey Sidorov\n * licensed under MIT license.\n *\n * https://github.com/morr/jquery.appear/\n *\n * Version: 0.3.6\n */\n(function($) {\n  var selectors = [];\n\n  var check_binded = false;\n  var check_lock = false;\n  var defaults = {\n    interval: 250,\n    force_process: false\n  };\n  var $window = $(window);\n\n  var $prior_appeared = [];\n\n  function process() {\n    check_lock = false;\n    for (var index = 0, selectorsLength = selectors.length; index < selectorsLength; index++) {\n      var $appeared = $(selectors[index]).filter(function() {\n        return $(this).is(':appeared');\n      });\n\n      $appeared.trigger('appear', [$appeared]);\n\n      if ($prior_appeared[index]) {\n        var $disappeared = $prior_appeared[index].not($appeared);\n        $disappeared.trigger('disappear', [$disappeared]);\n      }\n      $prior_appeared[index] = $appeared;\n    }\n  };\n\n  function add_selector(selector) {\n    selectors.push(selector);\n    $prior_appeared.push();\n  }\n\n  // \"appeared\" custom filter\n  $.expr[':']['appeared'] = function(element) {\n    var $element = $(element);\n    if (!$element.is(':visible')) {\n      return false;\n    }\n\n    var window_left = $window.scrollLeft();\n    var window_top = $window.scrollTop();\n    var offset = $element.offset();\n    var left = offset.left;\n    var top = offset.top;\n\n    if (top + $element.height() >= window_top &&\n        top - ($element.data('appear-top-offset') || 0) <= window_top + $window.height() &&\n        left + $element.width() >= window_left &&\n        left - ($element.data('appear-left-offset') || 0) <= window_left + $window.width()) {\n      return true;\n    } else {\n      return false;\n    }\n  };\n\n  $.fn.extend({\n    // watching for element's appearance in browser viewport\n    appear: function(options) {\n      var opts = $.extend({}, defaults, options || {});\n      var selector = this.selector || this;\n      if (!check_binded) {\n        var on_check = function() {\n          if (check_lock) {\n            return;\n          }\n          check_lock = true;\n\n          setTimeout(process, opts.interval);\n        };\n\n        $(window).scroll(on_check).resize(on_check);\n        check_binded = true;\n      }\n\n      if (opts.force_process) {\n        setTimeout(process, opts.interval);\n      }\n      add_selector(selector);\n      return $(selector);\n    }\n  });\n\n  $.extend({\n    // force elements's appearance check\n    force_appear: function() {\n      if (check_binded) {\n        process();\n        return true;\n      }\n      return false;\n    }\n  });\n})(function() {\n  if (typeof module !== 'undefined') {\n    // Node\n    return require('jquery');\n  } else {\n    return jQuery;\n  }\n}());\n\n/*global jQuery */\n/*jshint browser:true */\n/*!\n* FitVids 1.1\n*\n* Copyright 2013, Chris Coyier - http://css-tricks.com + Dave Rupert - http://daverupert.com\n* Credit to Thierry Koblentz - http://www.alistapart.com/articles/creating-intrinsic-ratios-for-video/\n* Released under the WTFPL license - http://sam.zoy.org/wtfpl/\n*\n*/\n\n(function( $ ){\n\n  \"use strict\";\n\n  $.fn.fitVids = function( options ) {\n    var settings = {\n      customSelector: null\n    };\n\n    if(!document.getElementById('fit-vids-style')) {\n      // appendStyles: https://github.com/toddmotto/fluidvids/blob/master/dist/fluidvids.js\n      var head = document.head || document.getElementsByTagName('head')[0];\n      var css = '.fluid-width-video-wrapper{width:100%;position:relative;padding:0;}.fluid-width-video-wrapper iframe,.fluid-width-video-wrapper object,.fluid-width-video-wrapper embed {position:absolute;top:0;left:0;width:100%;height:100%;}';\n      var div = document.createElement('div');\n      div.innerHTML = '<p>x</p><style id=\"fit-vids-style\">' + css + '</style>';\n      head.appendChild(div.childNodes[1]);\n    }\n\n    if ( options ) {\n      $.extend( settings, options );\n    }\n\n    return this.each(function(){\n      var selectors = [\n        \"iframe[src*='player.vimeo.com']\",\n        \"iframe[src*='youtube.com']\",\n        \"iframe[src*='youtube-nocookie.com']\",\n        \"iframe[src*='kickstarter.com'][src*='video.html']\",\n        \"object\",\n        \"embed\"\n      ];\n\n      if (settings.customSelector) {\n        selectors.push(settings.customSelector);\n      }\n\n      var $allVideos = $(this).find(selectors.join(','));\n      $allVideos = $allVideos.not(\"object object\"); // SwfObj conflict patch\n\n      $allVideos.each(function(){\n        var $this = $(this);\n        if (this.tagName.toLowerCase() === 'embed' && $this.parent('object').length || $this.parent('.fluid-width-video-wrapper').length) { return; }\n        var height = ( this.tagName.toLowerCase() === 'object' || ($this.attr('height') && !isNaN(parseInt($this.attr('height'), 10))) ) ? parseInt($this.attr('height'), 10) : $this.height(),\n            width = !isNaN(parseInt($this.attr('width'), 10)) ? parseInt($this.attr('width'), 10) : $this.width(),\n            aspectRatio = height / width;\n        if(!$this.attr('id')){\n          var videoID = 'fitvid' + Math.floor(Math.random()*999999);\n          $this.attr('id', videoID);\n        }\n        $this.wrap('<div class=\"fluid-width-video-wrapper\"></div>').parent('.fluid-width-video-wrapper').css('padding-top', (aspectRatio * 100)+\"%\");\n        $this.removeAttr('height').removeAttr('width');\n      });\n    });\n  };\n// Works with either jQuery or Zepto\n})( window.jQuery || window.Zepto );\n\n/**\n * ghostHunter - 0.3.1\n * Copyright (C) 2014 Jamal Neufeld (jamal@i11u.me)\n * MIT Licensed\n * @license\n */\n(function( $ ) {\n\n\t/* The lunr 0.7.0 library is included here to perform the fulltext searching. lunr is copyright (C) 2016 Oliver Nightingale. MIT Licensed */\n\t!function(){var t=function(e){var n=new t.Index;return n.pipeline.add(t.trimmer,t.stopWordFilter,t.stemmer),e&&e.call(n,n),n};t.version=\"0.7.0\",t.utils={},t.utils.warn=function(t){return function(e){t.console&&console.warn&&console.warn(e)}}(this),t.utils.asString=function(t){return void 0===t||null===t?\"\":t.toString()},t.EventEmitter=function(){this.events={}},t.EventEmitter.prototype.addListener=function(){var t=Array.prototype.slice.call(arguments),e=t.pop(),n=t;if(\"function\"!=typeof e)throw new TypeError(\"last argument must be a function\");n.forEach(function(t){this.hasHandler(t)||(this.events[t]=[]),this.events[t].push(e)},this)},t.EventEmitter.prototype.removeListener=function(t,e){if(this.hasHandler(t)){var n=this.events[t].indexOf(e);this.events[t].splice(n,1),this.events[t].length||delete this.events[t]}},t.EventEmitter.prototype.emit=function(t){if(this.hasHandler(t)){var e=Array.prototype.slice.call(arguments,1);this.events[t].forEach(function(t){t.apply(void 0,e)})}},t.EventEmitter.prototype.hasHandler=function(t){return t in this.events},t.tokenizer=function(e){return arguments.length&&null!=e&&void 0!=e?Array.isArray(e)?e.map(function(e){return t.utils.asString(e).toLowerCase()}):e.toString().trim().toLowerCase().split(t.tokenizer.seperator):[]},t.tokenizer.seperator=/[\\s\\-]+/,t.tokenizer.load=function(t){var e=this.registeredFunctions[t];if(!e)throw new Error(\"Cannot load un-registered function: \"+t);return e},t.tokenizer.label=\"default\",t.tokenizer.registeredFunctions={\"default\":t.tokenizer},t.tokenizer.registerFunction=function(e,n){n in this.registeredFunctions&&t.utils.warn(\"Overwriting existing tokenizer: \"+n),e.label=n,this.registeredFunctions[n]=e},t.Pipeline=function(){this._stack=[]},t.Pipeline.registeredFunctions={},t.Pipeline.registerFunction=function(e,n){n in this.registeredFunctions&&t.utils.warn(\"Overwriting existing registered function: \"+n),e.label=n,t.Pipeline.registeredFunctions[e.label]=e},t.Pipeline.warnIfFunctionNotRegistered=function(e){var n=e.label&&e.label in this.registeredFunctions;n||t.utils.warn(\"Function is not registered with pipeline. This may cause problems when serialising the index.\\n\",e)},t.Pipeline.load=function(e){var n=new t.Pipeline;return e.forEach(function(e){var i=t.Pipeline.registeredFunctions[e];if(!i)throw new Error(\"Cannot load un-registered function: \"+e);n.add(i)}),n},t.Pipeline.prototype.add=function(){var e=Array.prototype.slice.call(arguments);e.forEach(function(e){t.Pipeline.warnIfFunctionNotRegistered(e),this._stack.push(e)},this)},t.Pipeline.prototype.after=function(e,n){t.Pipeline.warnIfFunctionNotRegistered(n);var i=this._stack.indexOf(e);if(-1==i)throw new Error(\"Cannot find existingFn\");i+=1,this._stack.splice(i,0,n)},t.Pipeline.prototype.before=function(e,n){t.Pipeline.warnIfFunctionNotRegistered(n);var i=this._stack.indexOf(e);if(-1==i)throw new Error(\"Cannot find existingFn\");this._stack.splice(i,0,n)},t.Pipeline.prototype.remove=function(t){var e=this._stack.indexOf(t);-1!=e&&this._stack.splice(e,1)},t.Pipeline.prototype.run=function(t){for(var e=[],n=t.length,i=this._stack.length,r=0;n>r;r++){for(var o=t[r],s=0;i>s&&(o=this._stack[s](o,r,t),void 0!==o&&\"\"!==o);s++);void 0!==o&&\"\"!==o&&e.push(o)}return e},t.Pipeline.prototype.reset=function(){this._stack=[]},t.Pipeline.prototype.toJSON=function(){return this._stack.map(function(e){return t.Pipeline.warnIfFunctionNotRegistered(e),e.label})},t.Vector=function(){this._magnitude=null,this.list=void 0,this.length=0},t.Vector.Node=function(t,e,n){this.idx=t,this.val=e,this.next=n},t.Vector.prototype.insert=function(e,n){this._magnitude=void 0;var i=this.list;if(!i)return this.list=new t.Vector.Node(e,n,i),this.length++;if(e<i.idx)return this.list=new t.Vector.Node(e,n,i),this.length++;for(var r=i,o=i.next;void 0!=o;){if(e<o.idx)return r.next=new t.Vector.Node(e,n,o),this.length++;r=o,o=o.next}return r.next=new t.Vector.Node(e,n,o),this.length++},t.Vector.prototype.magnitude=function(){if(this._magnitude)return this._magnitude;for(var t,e=this.list,n=0;e;)t=e.val,n+=t*t,e=e.next;return this._magnitude=Math.sqrt(n)},t.Vector.prototype.dot=function(t){for(var e=this.list,n=t.list,i=0;e&&n;)e.idx<n.idx?e=e.next:e.idx>n.idx?n=n.next:(i+=e.val*n.val,e=e.next,n=n.next);return i},t.Vector.prototype.similarity=function(t){return this.dot(t)/(this.magnitude()*t.magnitude())},t.SortedSet=function(){this.length=0,this.elements=[]},t.SortedSet.load=function(t){var e=new this;return e.elements=t,e.length=t.length,e},t.SortedSet.prototype.add=function(){var t,e;for(t=0;t<arguments.length;t++)e=arguments[t],~this.indexOf(e)||this.elements.splice(this.locationFor(e),0,e);this.length=this.elements.length},t.SortedSet.prototype.toArray=function(){return this.elements.slice()},t.SortedSet.prototype.map=function(t,e){return this.elements.map(t,e)},t.SortedSet.prototype.forEach=function(t,e){return this.elements.forEach(t,e)},t.SortedSet.prototype.indexOf=function(t){for(var e=0,n=this.elements.length,i=n-e,r=e+Math.floor(i/2),o=this.elements[r];i>1;){if(o===t)return r;t>o&&(e=r),o>t&&(n=r),i=n-e,r=e+Math.floor(i/2),o=this.elements[r]}return o===t?r:-1},t.SortedSet.prototype.locationFor=function(t){for(var e=0,n=this.elements.length,i=n-e,r=e+Math.floor(i/2),o=this.elements[r];i>1;)t>o&&(e=r),o>t&&(n=r),i=n-e,r=e+Math.floor(i/2),o=this.elements[r];return o>t?r:t>o?r+1:void 0},t.SortedSet.prototype.intersect=function(e){for(var n=new t.SortedSet,i=0,r=0,o=this.length,s=e.length,a=this.elements,h=e.elements;;){if(i>o-1||r>s-1)break;a[i]!==h[r]?a[i]<h[r]?i++:a[i]>h[r]&&r++:(n.add(a[i]),i++,r++)}return n},t.SortedSet.prototype.clone=function(){var e=new t.SortedSet;return e.elements=this.toArray(),e.length=e.elements.length,e},t.SortedSet.prototype.union=function(t){var e,n,i;this.length>=t.length?(e=this,n=t):(e=t,n=this),i=e.clone();for(var r=0,o=n.toArray();r<o.length;r++)i.add(o[r]);return i},t.SortedSet.prototype.toJSON=function(){return this.toArray()},t.Index=function(){this._fields=[],this._ref=\"id\",this.pipeline=new t.Pipeline,this.documentStore=new t.Store,this.tokenStore=new t.TokenStore,this.corpusTokens=new t.SortedSet,this.eventEmitter=new t.EventEmitter,this.tokenizerFn=t.tokenizer,this._idfCache={},this.on(\"add\",\"remove\",\"update\",function(){this._idfCache={}}.bind(this))},t.Index.prototype.on=function(){var t=Array.prototype.slice.call(arguments);return this.eventEmitter.addListener.apply(this.eventEmitter,t)},t.Index.prototype.off=function(t,e){return this.eventEmitter.removeListener(t,e)},t.Index.load=function(e){e.version!==t.version&&t.utils.warn(\"version mismatch: current \"+t.version+\" importing \"+e.version);var n=new this;return n._fields=e.fields,n._ref=e.ref,n.tokenizer=t.tokenizer.load(e.tokenizer),n.documentStore=t.Store.load(e.documentStore),n.tokenStore=t.TokenStore.load(e.tokenStore),n.corpusTokens=t.SortedSet.load(e.corpusTokens),n.pipeline=t.Pipeline.load(e.pipeline),n},t.Index.prototype.field=function(t,e){var e=e||{},n={name:t,boost:e.boost||1};return this._fields.push(n),this},t.Index.prototype.ref=function(t){return this._ref=t,this},t.Index.prototype.tokenizer=function(e){var n=e.label&&e.label in t.tokenizer.registeredFunctions;return n||t.utils.warn(\"Function is not a registered tokenizer. This may cause problems when serialising the index\"),this.tokenizerFn=e,this},t.Index.prototype.add=function(e,n){var i={},r=new t.SortedSet,o=e[this._ref],n=void 0===n?!0:n;this._fields.forEach(function(t){var n=this.pipeline.run(this.tokenizerFn(e[t.name]));i[t.name]=n;for(var o=0;o<n.length;o++){var s=n[o];r.add(s),this.corpusTokens.add(s)}},this),this.documentStore.set(o,r);for(var s=0;s<r.length;s++){for(var a=r.elements[s],h=0,u=0;u<this._fields.length;u++){var l=this._fields[u],c=i[l.name],f=c.length;if(f){for(var d=0,p=0;f>p;p++)c[p]===a&&d++;h+=d/f*l.boost}}this.tokenStore.add(a,{ref:o,tf:h})}n&&this.eventEmitter.emit(\"add\",e,this)},t.Index.prototype.remove=function(t,e){var n=t[this._ref],e=void 0===e?!0:e;if(this.documentStore.has(n)){var i=this.documentStore.get(n);this.documentStore.remove(n),i.forEach(function(t){this.tokenStore.remove(t,n)},this),e&&this.eventEmitter.emit(\"remove\",t,this)}},t.Index.prototype.update=function(t,e){var e=void 0===e?!0:e;this.remove(t,!1),this.add(t,!1),e&&this.eventEmitter.emit(\"update\",t,this)},t.Index.prototype.idf=function(t){var e=\"@\"+t;if(Object.prototype.hasOwnProperty.call(this._idfCache,e))return this._idfCache[e];var n=this.tokenStore.count(t),i=1;return n>0&&(i=1+Math.log(this.documentStore.length/n)),this._idfCache[e]=i},t.Index.prototype.search=function(e){var n=this.pipeline.run(this.tokenizerFn(e)),i=new t.Vector,r=[],o=this._fields.reduce(function(t,e){return t+e.boost},0),s=n.some(function(t){return this.tokenStore.has(t)},this);if(!s)return[];n.forEach(function(e,n,s){var a=1/s.length*this._fields.length*o,h=this,u=this.tokenStore.expand(e).reduce(function(n,r){var o=h.corpusTokens.indexOf(r),s=h.idf(r),u=1,l=new t.SortedSet;if(r!==e){var c=Math.max(3,r.length-e.length);u=1/Math.log(c)}o>-1&&i.insert(o,a*s*u);for(var f=h.tokenStore.get(r),d=Object.keys(f),p=d.length,v=0;p>v;v++)l.add(f[d[v]].ref);return n.union(l)},new t.SortedSet);r.push(u)},this);var a=r.reduce(function(t,e){return t.intersect(e)});return a.map(function(t){return{ref:t,score:i.similarity(this.documentVector(t))}},this).sort(function(t,e){return e.score-t.score})},t.Index.prototype.documentVector=function(e){for(var n=this.documentStore.get(e),i=n.length,r=new t.Vector,o=0;i>o;o++){var s=n.elements[o],a=this.tokenStore.get(s)[e].tf,h=this.idf(s);r.insert(this.corpusTokens.indexOf(s),a*h)}return r},t.Index.prototype.toJSON=function(){return{version:t.version,fields:this._fields,ref:this._ref,tokenizer:this.tokenizerFn.label,documentStore:this.documentStore.toJSON(),tokenStore:this.tokenStore.toJSON(),corpusTokens:this.corpusTokens.toJSON(),pipeline:this.pipeline.toJSON()}},t.Index.prototype.use=function(t){var e=Array.prototype.slice.call(arguments,1);e.unshift(this),t.apply(this,e)},t.Store=function(){this.store={},this.length=0},t.Store.load=function(e){var n=new this;return n.length=e.length,n.store=Object.keys(e.store).reduce(function(n,i){return n[i]=t.SortedSet.load(e.store[i]),n},{}),n},t.Store.prototype.set=function(t,e){this.has(t)||this.length++,this.store[t]=e},t.Store.prototype.get=function(t){return this.store[t]},t.Store.prototype.has=function(t){return t in this.store},t.Store.prototype.remove=function(t){this.has(t)&&(delete this.store[t],this.length--)},t.Store.prototype.toJSON=function(){return{store:this.store,length:this.length}},t.stemmer=function(){var t={ational:\"ate\",tional:\"tion\",enci:\"ence\",anci:\"ance\",izer:\"ize\",bli:\"ble\",alli:\"al\",entli:\"ent\",eli:\"e\",ousli:\"ous\",ization:\"ize\",ation:\"ate\",ator:\"ate\",alism:\"al\",iveness:\"ive\",fulness:\"ful\",ousness:\"ous\",aliti:\"al\",iviti:\"ive\",biliti:\"ble\",logi:\"log\"},e={icate:\"ic\",ative:\"\",alize:\"al\",iciti:\"ic\",ical:\"ic\",ful:\"\",ness:\"\"},n=\"[^aeiou]\",i=\"[aeiouy]\",r=n+\"[^aeiouy]*\",o=i+\"[aeiou]*\",s=\"^(\"+r+\")?\"+o+r,a=\"^(\"+r+\")?\"+o+r+\"(\"+o+\")?$\",h=\"^(\"+r+\")?\"+o+r+o+r,u=\"^(\"+r+\")?\"+i,l=new RegExp(s),c=new RegExp(h),f=new RegExp(a),d=new RegExp(u),p=/^(.+?)(ss|i)es$/,v=/^(.+?)([^s])s$/,g=/^(.+?)eed$/,m=/^(.+?)(ed|ing)$/,y=/.$/,S=/(at|bl|iz)$/,w=new RegExp(\"([^aeiouylsz])\\\\1$\"),k=new RegExp(\"^\"+r+i+\"[^aeiouwxy]$\"),x=/^(.+?[^aeiou])y$/,b=/^(.+?)(ational|tional|enci|anci|izer|bli|alli|entli|eli|ousli|ization|ation|ator|alism|iveness|fulness|ousness|aliti|iviti|biliti|logi)$/,E=/^(.+?)(icate|ative|alize|iciti|ical|ful|ness)$/,F=/^(.+?)(al|ance|ence|er|ic|able|ible|ant|ement|ment|ent|ou|ism|ate|iti|ous|ive|ize)$/,_=/^(.+?)(s|t)(ion)$/,z=/^(.+?)e$/,O=/ll$/,P=new RegExp(\"^\"+r+i+\"[^aeiouwxy]$\"),T=function(n){var i,r,o,s,a,h,u;if(n.length<3)return n;if(o=n.substr(0,1),\"y\"==o&&(n=o.toUpperCase()+n.substr(1)),s=p,a=v,s.test(n)?n=n.replace(s,\"$1$2\"):a.test(n)&&(n=n.replace(a,\"$1$2\")),s=g,a=m,s.test(n)){var T=s.exec(n);s=l,s.test(T[1])&&(s=y,n=n.replace(s,\"\"))}else if(a.test(n)){var T=a.exec(n);i=T[1],a=d,a.test(i)&&(n=i,a=S,h=w,u=k,a.test(n)?n+=\"e\":h.test(n)?(s=y,n=n.replace(s,\"\")):u.test(n)&&(n+=\"e\"))}if(s=x,s.test(n)){var T=s.exec(n);i=T[1],n=i+\"i\"}if(s=b,s.test(n)){var T=s.exec(n);i=T[1],r=T[2],s=l,s.test(i)&&(n=i+t[r])}if(s=E,s.test(n)){var T=s.exec(n);i=T[1],r=T[2],s=l,s.test(i)&&(n=i+e[r])}if(s=F,a=_,s.test(n)){var T=s.exec(n);i=T[1],s=c,s.test(i)&&(n=i)}else if(a.test(n)){var T=a.exec(n);i=T[1]+T[2],a=c,a.test(i)&&(n=i)}if(s=z,s.test(n)){var T=s.exec(n);i=T[1],s=c,a=f,h=P,(s.test(i)||a.test(i)&&!h.test(i))&&(n=i)}return s=O,a=c,s.test(n)&&a.test(n)&&(s=y,n=n.replace(s,\"\")),\"y\"==o&&(n=o.toLowerCase()+n.substr(1)),n};return T}(),t.Pipeline.registerFunction(t.stemmer,\"stemmer\"),t.generateStopWordFilter=function(t){var e=t.reduce(function(t,e){return t[e]=e,t},{});return function(t){return t&&e[t]!==t?t:void 0}},t.stopWordFilter=t.generateStopWordFilter([\"a\",\"able\",\"about\",\"across\",\"after\",\"all\",\"almost\",\"also\",\"am\",\"among\",\"an\",\"and\",\"any\",\"are\",\"as\",\"at\",\"be\",\"because\",\"been\",\"but\",\"by\",\"can\",\"cannot\",\"could\",\"dear\",\"did\",\"do\",\"does\",\"either\",\"else\",\"ever\",\"every\",\"for\",\"from\",\"get\",\"got\",\"had\",\"has\",\"have\",\"he\",\"her\",\"hers\",\"him\",\"his\",\"how\",\"however\",\"i\",\"if\",\"in\",\"into\",\"is\",\"it\",\"its\",\"just\",\"least\",\"let\",\"like\",\"likely\",\"may\",\"me\",\"might\",\"most\",\"must\",\"my\",\"neither\",\"no\",\"nor\",\"not\",\"of\",\"off\",\"often\",\"on\",\"only\",\"or\",\"other\",\"our\",\"own\",\"rather\",\"said\",\"say\",\"says\",\"she\",\"should\",\"since\",\"so\",\"some\",\"than\",\"that\",\"the\",\"their\",\"them\",\"then\",\"there\",\"these\",\"they\",\"this\",\"tis\",\"to\",\"too\",\"twas\",\"us\",\"wants\",\"was\",\"we\",\"were\",\"what\",\"when\",\"where\",\"which\",\"while\",\"who\",\"whom\",\"why\",\"will\",\"with\",\"would\",\"yet\",\"you\",\"your\"]),t.Pipeline.registerFunction(t.stopWordFilter,\"stopWordFilter\"),t.trimmer=function(t){return t.replace(/^\\W+/,\"\").replace(/\\W+$/,\"\")},t.Pipeline.registerFunction(t.trimmer,\"trimmer\"),t.TokenStore=function(){this.root={docs:{}},this.length=0},t.TokenStore.load=function(t){var e=new this;return e.root=t.root,e.length=t.length,e},t.TokenStore.prototype.add=function(t,e,n){var n=n||this.root,i=t.charAt(0),r=t.slice(1);return i in n||(n[i]={docs:{}}),0===r.length?(n[i].docs[e.ref]=e,void(this.length+=1)):this.add(r,e,n[i])},t.TokenStore.prototype.has=function(t){if(!t)return!1;for(var e=this.root,n=0;n<t.length;n++){if(!e[t.charAt(n)])return!1;e=e[t.charAt(n)]}return!0},t.TokenStore.prototype.getNode=function(t){if(!t)return{};for(var e=this.root,n=0;n<t.length;n++){if(!e[t.charAt(n)])return{};e=e[t.charAt(n)]}return e},t.TokenStore.prototype.get=function(t,e){return this.getNode(t,e).docs||{}},t.TokenStore.prototype.count=function(t,e){return Object.keys(this.get(t,e)).length},t.TokenStore.prototype.remove=function(t,e){if(t){for(var n=this.root,i=0;i<t.length;i++){if(!(t.charAt(i)in n))return;n=n[t.charAt(i)]}delete n.docs[e]}},t.TokenStore.prototype.expand=function(t,e){var n=this.getNode(t),i=n.docs||{},e=e||[];return Object.keys(i).length&&e.push(t),Object.keys(n).forEach(function(n){\"docs\"!==n&&e.concat(this.expand(t+n,e))},this),e},t.TokenStore.prototype.toJSON=function(){return{root:this.root,length:this.length}},function(t,e){\"function\"==typeof define&&define.amd?define(e):\"object\"==typeof exports?module.exports=e():t.lunr=e()}(this,function(){return t})}();\n\n\t//This is the main plugin definition\n\t$.fn.ghostHunter \t= function( options ) {\n\t \n\t \t//Here we use jQuery's extend to set default values if they weren't set by the user\n\t    var opts \t\t= $.extend( {}, $.fn.ghostHunter.defaults, options );\n\t    if( opts.results ) \n    \t{\n    \t\tpluginMethods.init( this , opts );\n    \t\treturn pluginMethods;\n    \t}\n\n\t};\n\t \n\t$.fn.ghostHunter.defaults = {\n\t\tresults \t\t\t: false,\n\t\tonKeyUp \t\t\t: false,\n\t\tresult_template \t: \"<a href='{{link}}'><p><h2>{{title}}</h2><h4>{{prettyPubDate}}</h4></p></a>\",\n\t\tinfo_template\t\t: \"<p>Number of posts found: {{amount}}</p>\",\n\t\tdisplaySearchInfo \t: true,\n\t\tzeroResultsInfo\t\t: true,\n\t\tbefore \t\t\t\t: false,\n\t\tonComplete \t\t\t: false\n\t};\n\n\tvar prettyDate = function(date) {\n\t\tvar d = new Date(date);\n\t\tvar monthNames = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n\t\t\treturn d.getDate() + ' ' + monthNames[d.getMonth()] + ' ' + d.getFullYear();\n\t};\n\n\tvar pluginMethods \t= {\n\n\t\tisInit \t\t\t: false,\n\n\t\tinit \t\t\t: function( target , opts ){\n\n\t\t\tvar that \t\t\t\t= this;\n\t\t\tthis.target \t\t\t= target;\n\t\t\tthis.results \t\t\t= opts.results;\n\t\t\tthis.blogData \t\t\t= {};\n\t\t\tthis.result_template \t= opts.result_template;\n\t\t\tthis.info_template \t\t= opts.info_template;\n\t\t\tthis.zeroResultsInfo \t= opts.zeroResultsInfo;\n\t\t\tthis.displaySearchInfo  = opts.displaySearchInfo;\n\t\t\tthis.before \t\t\t= opts.before;\n\t\t\tthis.onComplete \t\t= opts.onComplete;\n\n\t\t\t//This is where we'll build the index for later searching. It's not a big deal to build it on every load as it takes almost no space without data\n\t\t\tthis.index = lunr(function () {\n\t\t\t    this.field('title', {boost: 10})\n\t\t\t    this.field('description')\n\t\t\t    this.field('link')\n\t\t\t    this.field('markdown', {boost: 5})\n\t\t\t    this.field('pubDate')\n\t\t\t    this.field('tag')\n\t\t\t    this.ref('id')\n\t\t\t});\n\n\t\t\ttarget.focus(function(){\n\t\t\t\tthat.loadAPI();\n\t\t\t});\n\n\t\t\ttarget.closest(\"form\").submit(function(e){\n\t\t\t\te.preventDefault();\n\t\t\t\tthat.find(target.val());\n\t\t\t});\n\n\t\t\tif( opts.onKeyUp ) {\n\t\t\t\tthat.loadAPI();\n\t\t\t\ttarget.keyup(function() {\n\t\t\t\t\tthat.find(target.val());\n\t\t\t\t});\n\n\t\t\t}\n\n\t\t},\n\n\t\tloadAPI\t\t\t: function(){\n\t\t\t\n\t\t\tif(this.isInit) return false;\n\n\t\t/*\tHere we load all of the blog posts to the index. \n\t\t\tThis function will not call on load to avoid unnecessary heavy \n\t\t\toperations on a page if a visitor never ends up searching anything. */\n\t\t\t\n\t\t\tvar index \t\t= this.index,\n\t\t\t\tblogData \t= this.blogData;\n\n\t        $.get(ghost.url.api('posts', {limit: \"all\", include: \"tags\"})).done(function(data){\n\t        \tsearchData = data.posts;\n            \tsearchData.forEach(function(arrayItem){\n            \t\tvar tag_arr = arrayItem.tags.map(function(v) {\n\t    \t\t\treturn v.name; // `tag` object has an `name` property which is the value of tag. If you also want other info, check API and get that property\n\t    \t\t\t})\n\t    \t\t\tvar category = tag_arr.join(\", \");\n\t    \t\t\tif (category.length < 1){\n\t    \t\t\tcategory = \"undefined\";\n\t\t\t\t\t}\n\t\t\t        var parsedData \t= {\n\t\t\t\t\t\tid \t\t\t: String(arrayItem.id),\n\t\t\t\t\t\ttitle \t\t: String(arrayItem.title),\n\t\t\t\t\t\tdescription\t: String(arrayItem.meta_description),\n\t\t\t\t\t\tmarkdown \t: String(arrayItem.markdown),\n\t\t\t\t\t\tpubDate \t: String(arrayItem.created_at),\n\t\t\t\t\t\ttag \t\t: category,\n\t\t\t\t\t\tlink \t\t: String(arrayItem.url)\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tparsedData.prettyPubDate = prettyDate(parsedData.pubDate);\n\t\t\t\t\tvar tempdate = prettyDate(parsedData.pubDate);\n\n\t\t\t\t    index.add(parsedData)\n\t\t\t\t    blogData[arrayItem.id] = {title: arrayItem.title, description: arrayItem.meta_description, pubDate: tempdate, link: arrayItem.url};\n            \t\t});\n\n\t\t\t});\n\n\t\t\tthis.isInit = true;\n\n\t\t},\n\n\t\tfind \t\t \t: function(value){\n\t\t\tvar searchResult \t= this.index.search(value);\n\t\t\tvar results \t\t= $(this.results);\n\t\t\tvar resultsData \t= [];\n\t\t\tresults.empty();\n\n\t\t\tif(this.before) {\n\t\t\t\tthis.before();\n\t\t\t};\n\n\t\t\tif(this.zeroResultsInfo || searchResult.length > 0)\n\t\t\t{\n\t\t\t\tif(this.displaySearchInfo) results.append(this.format(this.info_template,{\"amount\":searchResult.length}));\n\t\t\t}\n\n\t\t\tfor (var i = 0; i < searchResult.length; i++)\n\t\t\t{\n\t\t\t\tvar lunrref\t\t= searchResult[i].ref;\n\t\t\t\tvar postData  \t= this.blogData[lunrref];\n\t\t\t\tresults.append(this.format(this.result_template,postData));\n\t\t\t\tresultsData.push(postData);\n\t\t\t}\n\n\t\t\tif(this.onComplete) {\n\t\t\t\tthis.onComplete(resultsData);\n\t\t\t};\n\t\t},\n\n\t\tclear \t\t\t: function(){\n\t\t\t$(this.results).empty();\n\t\t\tthis.target.val(\"\");\n\t\t},\n\n\t\tformat \t\t\t: function (t, d) {\n\t        return t.replace(/{{([^{}]*)}}/g, function (a, b) {\n\t            var r = d[b];\n\t            return typeof r === 'string' || typeof r === 'number' ? r : a;\n\t        });\n\t\t}\n\t}\n\n})( jQuery );\n","/**\n * Main JS file for Paperleaf behaviours\n */\n\n/* globals jQuery, document */\n(function ($, undefined) {\n  \"use strict\";\n\n  var $document = $(document);\n\n  $document.ready(function () {\n\n    /**\n     * FitVids.js for responsive videos\n     */\n    var $postContent = $(\".post-content\");\n    $postContent.fitVids();\n\n    /**\n     * Masonry grid\n     */\n    var $grid = $('.js-grid').imagesLoaded( function() {\n      $grid.masonry({\n        itemSelector       : '.post',\n        percentPosition    : true,\n        transitionDuration : '0.25s'\n      });\n      $.force_appear();\n    });\n\n    /**\n     * Add class to elements that appear in viewport\n     */\n    $('.post--grid').appear();\n    $('.post--grid').on('appear', function(event, $all_appeared_elements) {\n      $(this).addClass('animate');\n    });\n\n    /**\n     * Preloader\n     */\n    $('body').imagesLoaded( function() {\n      $('.js-loader').fadeOut(250);\n    });\n\n    $('.search-field').ghostHunter({\n      results   : '.content-area',\n      info_template   : '<h1 class=\"page-title mt0\">Number of posts found: {{amount}}</h1>',\n      result_template: '<article class=\"animate border-box post--grid\"><div class=\"p3 bg-white box-shadow\"><header class=\"post-header\"><h2 class=\"post-title mt0 mb0 break-word\"><a class=\"black\" href=\"{{link}}\">{{title}}</a></h2></header></div></article>'\n    });\n\n  });\n\n})(jQuery);\n"],"sourceRoot":"/source/"}